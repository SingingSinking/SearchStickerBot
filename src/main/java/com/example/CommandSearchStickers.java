package com.example;

import java.util.ArrayList;
import java.util.List;

import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;

public class CommandSearchStickers implements Action {
    private final String action;
    private String namePack;
    private MapPack allPack;

    //–°–∫–æ–ª—å–∫–æ –µ–º–æ–∂–¥–∏ –≤—ã–≤–æ–¥–∏—Ç—Å—è –Ω–∞ –æ–¥–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ, —Å–ª–µ–¥—É–µ—Ç —É—á–∏—Ç—ã–≤–∞—Ç—å —á—Ç–æ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏, –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –≤ AllButtonReation
    //–ú–æ–∂–µ—Ç –±—ã—Ç—å –¥—Ä—É–≥–æ–π, —Ç–æ–≥–¥–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö –±—É–¥–µ—Ç –≤—ã–≤–æ–¥–∏—Ç—å—Å—è —Ä–∞–∑–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å–≤–æ –ø–∞–∫–æ–≤
    private int countPacksOnPage = 4;
    //–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞–∫–æ–≤ –≤ –º–∞—Å—Å–∏–≤–µ
    private int sizeAllPack;
    //–í—Å–µ–≥–æ —Å—Ç—Ä–∞–Ω–∏—Ü
    private int countPage;


    public CommandSearchStickers(String action) {
        this.action = action;
    }

    @Override
    public SendMessage handle(Update update) {
        var msg = update.getMessage();
        var chatId = msg.getChatId().toString();
        var text = "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ üëá";

        final SendMessage sendMessage = new SendMessage();
        sendMessage.enableMarkdown(true);
        sendMessage.setChatId(chatId);
        sendMessage.setText(text);
        return sendMessage;
    }

    //–ú–µ—Ç–æ–¥ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–∞–∫–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    @Override
    public SendMessage callback(Update update) {
        var msg = update.getMessage();
        var chatId = msg.getChatId().toString();
        namePack = msg.getText();


        Website combotSite = new Website("https://combot.org/telegram/stickers?q=" + namePack, "combotSticker");
        Website chpicSite = new Website("https://chpic.su/ru/stickers/search/" + namePack + "/?searchModule=stickers", "chpicSticker");
        
        //–°–∞–π—Ç —É–ø–∞–ª
        if (chpicSite.GetStatus() == false && combotSite.GetStatus() == false) 
            return new SendMessage(chatId, "–ù–∞–±–ª—é–¥–∞—é—Ç—Å—è —Å–±–æ–∏ –≤ —Ä–∞–±–æ—Ç–µ –∫–æ–º–∞–Ω–¥—ã ü§ß\n–£–∂–µ —Ä–µ—à–∞–µ–º –ø—Ä–æ–±–ª–µ–º—É, –æ–∂–∏–¥–∞–π—Ç–µ");
            
            // –°–æ–∑–¥–∞–µ–º –ø–∞–∫–∏ –ø–æ –æ—Ç–¥–µ–ª—å–Ω–æ—Å—Ç–∏
        // MapPack combotPack = new MapPack(combotSite);
        // MapPack chpicPack = new MapPack(chpicSite);
        
            // –°–æ–∑–¥–∞–µ–º –æ–±—â–∏–π –ø–∞–∫ –∫–æ—Ç–æ—Ä—ã–π —Å–æ–¥–µ—Ä–∂–∏—Ç –≤—Å–µ —Å—Ç–∏–∫–µ—Ä—ã –∏–∑ –¥–≤—É—Ö —Å–∞–π—Ç–æ–≤.
            // –û–±—â–∏–π –ø–∞–∫ —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–Ω–∞—á–∞–ª–∞ —Å—Ç–∏–∫–µ—Ä—ã –∏–∑ –ø–µ—Ä–≤–æ–≥–æ, –∞ –ø–æ—Ç–æ–º –∏–∑ –≤—Ç–æ—Ä–æ–≥–æ —Å–∞–π—Ç–∞
        allPack = new MapPack(chpicSite, combotSite);
        
        sizeAllPack = allPack.SizePack();
        
        countPage = (int) Math.ceil(sizeAllPack/countPacksOnPage);
        if (sizeAllPack < countPacksOnPage) countPage = 1;
        //–°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø–µ—Ä–µ–ª–∏—Å—Ç—ã–≤–∞–Ω–∏—è –º–µ–Ω—é
        InlineKeyboardMarkup keyboard = SetBeginKeyboard();


        // System.out.println("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏: " + COUNTPACKONMESSAGE + "\n" +
        //                     "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—Å–µ—Ö –ø–∞–∫–æ–≤: " + COUNTALLPACK + "\n" +
        //                     "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü: " + COUNTPAGES + "\n" +
        //                     "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞–∫–æ–≤ –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ: " + COUNTPACKONLASTMESSAGE + "\n");

        
        final SendMessage sendMessage = new SendMessage();
        sendMessage.enableMarkdown(true);
        sendMessage.setChatId(chatId);
        sendMessage.setReplyMarkup(keyboard);
        String text;
        if (sizeAllPack == 0){
                text = "–ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã —Å—Ç–∏–∫–µ—Ä—ã ü§ß"
                + "\n–í–æ–∑–º–æ–∂–Ω–æ, –≤–∞–º —Å—Ç–æ–∏—Ç –Ω–µ–º–Ω–æ–≥–æ –∏–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –∏–ª–∏ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –¥—Ä—É–≥–æ–π —è–∑—ã–∫";
                sendMessage.setReplyMarkup(null);
        } else {
                text =  allPack.getPackInfo(0, countPacksOnPage);
        }
        sendMessage.setText(text);
        sendMessage.setParseMode("MarkdownV2");
        //System.out.println(sendMessage);
        return sendMessage;
    }

    public MapPack getStickersMapPack(){
        return allPack;
    } 

    //–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ "–°—Ç—Ä–∞–Ω–∏—Ü–∞", "–î–∞–ª—å—à–µ"
    private InlineKeyboardMarkup SetBeginKeyboard() {
        
        InlineKeyboardMarkup keyboardMarkup = new InlineKeyboardMarkup();

        List<List<InlineKeyboardButton>> rows = new ArrayList<>();
        List<InlineKeyboardButton> row1 = new ArrayList<>();

        InlineKeyboardButton pageNumber = new InlineKeyboardButton();
        pageNumber.setText("1" + "\\" + String.valueOf(countPage));
        pageNumber.setCallbackData("page");
        row1.add(pageNumber);
        if (countPage > 1){
            InlineKeyboardButton nextButton = new InlineKeyboardButton();
            nextButton.setText("‚û°Ô∏è");
            nextButton.setCallbackData("nextButton");
            row1.add(nextButton);
        }

        rows.add(row1);
        keyboardMarkup.setKeyboard(rows);
        return keyboardMarkup;
    }

    @Override
    public MapPack getPack() {
        // TODO Auto-generated method stub
        return allPack;
    }
}
