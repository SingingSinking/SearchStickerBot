package com.example;

import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.Update;

public class CommandRandomSticker implements Action{
    @Override
    public SendMessage handle(Update update) {
        var msg = update.getMessage();
        var chatId = msg.getChatId().toString();

        //–°–ª—É—á–∞–π–Ω—ã–µ –Ω–æ–º–∞–µ—Ä–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏ –ø–∞–∫–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
        int randomNumPage = 1 + (int) ( Math.random() * 470 );
        int randomNumPack = 1 + (int) ( Math.random() * 38 );

        Website chpicSticker = new Website("https://chpic.su/ru/stickers/?page=" + randomNumPage, "chpicRandomSticker");
        if (chpicSticker.GetStatus() == false) 
            return new SendMessage(chatId, "–ù–∞–±–ª—é–¥–∞—é—Ç—Å—è —Å–±–æ–∏ –≤ —Ä–∞–±–æ—Ç–µ –∫–æ–º–∞–Ω–¥—ã ü§ß\n–£–∂–µ —Ä–µ—à–∞–µ–º –ø—Ä–æ–±–ª–µ–º—É, –æ–∂–∏–¥–∞–π—Ç–µ");

        //–ü–∞—Ä—Å–µ—Ä
        Pack pack =  GetRandomPack(chpicSticker, randomNumPack);

        StringBuilder info = new StringBuilder();
        String stickerUrl = pack.GetUrl();
        String stickerName = pack.GetName();

        //–≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º –≤—Å–µ —Å–ø–µ—Ü. —Å–∏–º–≤–æ–ª—ã, –∏–Ω–∞—á–µ —Ç–µ–ª–µ–≥—Ä–∞–º –Ω–µ –±—É–¥–µ—Ç –∏—Ö —É—á–∏—Ç—ã–≤–∞—Ç—å –∏ —Å—Å—ã–ª–∫–∞ –ø–æ—Ç–µ—Ä—è–µ—Ç —á–∞—Å—Ç—å —Å–∏–º–≤–æ–ª–æ–≤
        stickerUrl = ShieldStr(stickerUrl);
        stickerName = ShieldStr(stickerName);

        info.append("–ù–æ–≤—ã–µ —ç–º–æ–¥–∂–∏ –¥–ª—è –≤–∞—Å üòã:").append("\n");
        info.append("üëâ–ù–∞–∑–≤–∞–Ω–∏–µ: ").append(stickerName).append("\n");
        info.append("   [\\[–û—Ç–∫—Ä—ã—Ç—å\\]]").append("(" + stickerUrl + ")").append("\n");
        info.append("\n");
        // info.append("URL image: ").append(pack.GetImg()).append("\n\n");
        
        final SendMessage sendMessage = new SendMessage();
        sendMessage.enableMarkdown(true);
        sendMessage.setChatId(chatId);
        sendMessage.setParseMode("MarkdownV2");
        sendMessage.setText(info.toString());
        return sendMessage;
    }
    


    private Pack GetRandomPack(Website htmlDom, int randomNumPack) {
        String urlPack =
                    "t.me/addemoji/" + htmlDom.GetAllHtmlPage().getElementsByClass("textsblock").get(randomNumPack).child(0).getElementsByTag("a").attr("href");
        urlPack = urlPack.replace("/ru/stickers/", "");
        urlPack = urlPack.substring(0, urlPack.length() - 1);

        String namePack = htmlDom.GetAllHtmlPage().getElementsByClass("textsblock").get(randomNumPack).child(0).text();
        namePack = namePack.replace("–°—Ç–∏–∫–µ—Ä—ã —Ç–µ–ª–µ–≥—Ä–∞–º ", "");

        // String urlImgPack = "https://chpic.su"
        //         + htmlDom.GetAllHtmlPage().getElementsByClass("images").get(randomNumPack).select("img").attr("src");

        return new Pack(namePack, urlPack, null);
    }



     //–º–µ—Ç–æ–¥ —ç–∫—Ä–∞–Ω–∏—Ä—É–µ—Ç —Å—Ç—Ä–æ–∫—É
     private String ShieldStr(String str){
        return str.replaceAll("\\(", "%28")
        .replaceAll("\\)", "%29")
        .replaceAll("_", "%5f")
        .replace(".", "\\.")
        .replaceAll("-", "%2d")
        .replaceAll("\\|", "%7c")
        .replaceAll("#", "%23")
        .replaceAll("!", "%21");
    }

    @Override
    public SendMessage callback(Update update) {
        return handle(update);
    }

    @Override
    public MapPack getPack() {
        // TODO Auto-generated method stub
        return null;
    }
}
