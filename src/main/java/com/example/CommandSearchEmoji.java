package com.example;

import java.util.ArrayList;
import java.util.List;

import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;

public class CommandSearchEmoji implements Action{
    private final String action;
    private String namePack;
    private MapPack allPack;

    //–°–∫–æ–ª—å–∫–æ –µ–º–æ–∂–¥–∏ –≤—ã–≤–æ–¥–∏—Ç—Å—è –Ω–∞ –æ–¥–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ, —Å–ª–µ–¥—É–µ—Ç —É—á–∏—Ç—ã–≤–∞—Ç—å —á—Ç–æ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏, –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –≤ AllButtonReation
    //–ú–æ–∂–µ—Ç –±—ã—Ç—å –¥—Ä—É–≥–æ–π, —Ç–æ–≥–¥–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö –±—É–¥–µ—Ç –≤—ã–≤–æ–¥–∏—Ç—å—Å—è —Ä–∞–∑–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å–≤–æ –ø–∞–∫–æ–≤
    private int countPacksOnPage = 5;
    //–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞–∫–æ–≤ –≤ –º–∞—Å—Å–∏–≤–µ
    private int sizeAllPack;
    //–í—Å–µ–≥–æ —Å—Ç—Ä–∞–Ω–∏—Ü
    private int countPage;


    public CommandSearchEmoji(String action) {
        this.action = action;
    }

    @Override
    public SendMessage handle(Update update) {
        var msg = update.getCallbackQuery().getMessage();
        var chatId = msg.getChatId().toString();
        var text = "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —ç–º–æ–¥–∂–∏";

        final SendMessage sendMessage = new SendMessage();
        sendMessage.enableMarkdown(true);
        sendMessage.setChatId(chatId);
        sendMessage.setText(text);
        return sendMessage;
    }

    //–ú–µ—Ç–æ–¥ –¥–ª—è –µ–º–æ–¥–∂–∏ –ø–∞–∫–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    @Override
    public SendMessage callback(Update update) {
        var msg = update.getMessage();
        var chatId = msg.getChatId().toString();
        namePack = msg.getText();

        //–°–∞–π—Ç —Å Emoji (–∞—Ä–≥—É–º–µ–Ω—Ç –º–µ—Ç–æ–¥–∞ - chpicEmojiSearch, –ø–æ –Ω–µ–º—É MapPack –ø–æ–Ω–∏–º–∞–µ—Ç —á—Ç–æ —Å —Å–∞–π—Ç–∞ –±–µ—Ä—É—Ç—Å—è –µ–º–æ–¥–∂–∏)
        Website chpicSite = new Website("https://chpic.su/ru/stickers/search/" + namePack + "/?searchModule=emojis", "chpicEmojiSearch");
        //–°–∞–π—Ç —É–ø–∞–ª
        if (chpicSite.GetStatus() == false) 
            return new SendMessage(chatId, "–ù–∞–±–ª—é–¥–∞—é—Ç—Å—è —Å–±–æ–∏ –≤ —Ä–∞–±–æ—Ç–µ –∫–æ–º–∞–Ω–¥—ã ü§ß\n–£–∂–µ —Ä–µ—à–∞–µ–º –ø—Ä–æ–±–ª–µ–º—É, –æ–∂–∏–¥–∞–π—Ç–µ");
        
            // –°–æ–∑–¥–∞–µ–º –æ–±—â–∏–π –ø–∞–∫ –∫–æ—Ç–æ—Ä—ã–π —Å–æ–¥–µ—Ä–∂–∏—Ç –≤—Å–µ –µ–º–æ–¥–∂–∏
        allPack = new MapPack(chpicSite);
        
        sizeAllPack = allPack.SizePack();

        countPage = (int) Math.ceil(sizeAllPack/countPacksOnPage);
        if (sizeAllPack < countPacksOnPage) countPage = 1;
        //–°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø–µ—Ä–µ–ª–∏—Å—Ç—ã–≤–∞–Ω–∏—è –º–µ–Ω—é
        InlineKeyboardMarkup keyboard = SetBeginKeyboard();


        final SendMessage sendMessage = new SendMessage();
        sendMessage.enableMarkdown(true);
        sendMessage.setChatId(chatId);
        sendMessage.setReplyMarkup(keyboard);
        String text;
        if (sizeAllPack == 0){
            text = "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ\\. ü§ß\n\n" + 
                    "–ü–æ—á–µ–º—É —ç–º–æ–¥–∂–∏ –º–æ–≥—É—Ç –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è?\n\n" +
                    "1\\. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –≤–≤–µ–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–∞–±–æ—Ä–∞ —Å —ç–º–æ–¥–∂–∏\\.\n\n" +
                    "2\\. –ï—Å–ª–∏ –≤—ã —É–≤–µ—Ä–µ–Ω—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏—è, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥—Ä—É–≥–æ–π —è–∑—ã–∫ –¥–ª—è –ø–æ–∏—Å–∫–∞\\.";
            sendMessage.setReplyMarkup(null);
        } else 
            text =  allPack.getPackInfo(0, countPacksOnPage);

        sendMessage.setText(text);
        sendMessage.setParseMode("MarkdownV2");
        //System.out.println(sendMessage);
        return sendMessage;
    }

    //–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ "–°—Ç—Ä–∞–Ω–∏—Ü–∞", "–î–∞–ª—å—à–µ"
    private InlineKeyboardMarkup SetBeginKeyboard() {
        
        InlineKeyboardMarkup keyboardMarkup = new InlineKeyboardMarkup();

        List<List<InlineKeyboardButton>> rows = new ArrayList<>();
        List<InlineKeyboardButton> row1 = new ArrayList<>();

        InlineKeyboardButton pageNumber = new InlineKeyboardButton();
        pageNumber.setText("1" + "\\" + String.valueOf(countPage));
        pageNumber.setCallbackData("page");
        row1.add(pageNumber);
        if (countPage > 1){
            InlineKeyboardButton nextButton = new InlineKeyboardButton();
            nextButton.setText("‚û°Ô∏è");
            nextButton.setCallbackData("nextButton");
            row1.add(nextButton);
        }

        rows.add(row1);
        keyboardMarkup.setKeyboard(rows);
        return keyboardMarkup;
    }

    @Override
    public MapPack getPack() {
        // TODO Auto-generated method stub
        return allPack;
    }
}
